from __future__ import print_function, absolute_import, division

import os
import re
import boto3


DEFAULT = """
##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1	localhost
255.255.255.255	broadcasthost
::1             localhost

"""


PREFIX = "### GENERATED BY ec2hosts\n"
SUFFIX = "### END"
REGEX = r"{}[a-zA-Z0-9.\-\n\r\s\t]+{}".format(PREFIX, SUFFIX)

HOSTS_FILE = "/etc/hosts"
TMP_HOSTS_FILE = "/tmp/etc-hosts.tmp"

ec2 = boto3.resource("ec2")


def read_file():
    """Read `/etc/hosts`
    """
    with open(HOSTS_FILE, "rb") as f:
        original = f.read().decode("utf-8")
    return original


def clean(text):
    """Remove everything that was generated by ec2hosts
    """
    return re.sub(REGEX, "", text).strip() + "\n"


def gen_file():
    """Generate the contents of a new `/etc/hosts` file
    """
    content = clean(read_file())
    content += PREFIX
    instances = ec2.instances.filter(Filters=[{"Name": "instance-state-name", "Values": ["running"]}])
    for instance in instances:
        private_dns_name = instance.private_dns_name
        private_hostname = instance.private_dns_name.split('.')[0]
        content += "{}   {}  {}\n".format(instance.public_ip_address.ljust(15), private_dns_name, private_hostname)
    content += SUFFIX + "\n"
    return content


def write(content):
    """Write contents to `/etc/etc-hosts.tmp`
    """
    with open(TMP_HOSTS_FILE, "w") as f:
        f.write(content)


def move():
    """Move temp file to `/etc/hosts`
    """
    os.system('sudo mv {} {}'.format(TMP_HOSTS_FILE, HOSTS_FILE))
